name: Export Supabase Locations

on:
  schedule:
    - cron: '0 2 * * *'  # tÃ¤glich um 02:00â€¯UTC (entspricht 04:00 MESZ)
  workflow_dispatch:      # manuell auslÃ¶sbar

jobs:
  export-locations:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # âœ… erlaubt Push-VorgÃ¤nge ins Repo

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install fetch dependency
        run: npm install node-fetch@2

      - name: Fetch Supabase data and write JSON
        run: |
          node -e "
            const fetch = require('node-fetch');
            const fs = require('fs');

            const baseUrl = 'https://ufebkrjjnrfhupwxvpmb.supabase.co/rest/v1';
            const headers = {
              'apikey': process.env.SUPABASE_ANON_KEY,
              'Authorization': 'Bearer ' + process.env.SUPABASE_ANON_KEY
            };

            // Schritt 1: Kategorien laden
            Promise.all([
              fetch(\`\${baseUrl}/categories?select=id,name_de,name_en,name_it,name_hr\`, { headers }).then(res => res.json()),
              fetch(\`\${baseUrl}/locations\`, { headers }).then(res => res.json())
            ])
            .then(([categories, locations]) => {
              const lookup = {};
              categories.forEach(cat => {
                lookup[cat.id] = cat;
              });

              // Schritt 2: Kategorienamen pro Sprache ergÃ¤nzen
              const enriched = locations.map(loc => {
                const cat = lookup[loc.category_id] || {};
                return {
                  ...loc,
                  category_name_de: cat.name_de || 'Unkategorisiert',
                  category_name_en: cat.name_en || 'Uncategorized',
                  category_name_it: cat.name_it || 'Non categorizzato',
                  category_name_hr: cat.name_hr || 'Nekategorizirano'
                };
              });

              // Schritt 3: Dateien speichern
              const content = JSON.stringify(enriched, null, 2);
              fs.mkdirSync('data', { recursive: true });
              fs.mkdirSync('public/data', { recursive: true });
              fs.writeFileSync('data/locations.json', content);
              fs.writeFileSync('public/data/locations.json', content);
            })
            .catch(err => {
              console.error('Fehler beim Abrufen:', err);
              process.exit(1);
            });
          "
        env:
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

      - name: ðŸ”„ Pull latest main before push
        run: |
          git pull origin main --rebase

      - name: Commit and push if changed
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'actions@github.com'
          git add data/locations.json public/data/locations.json
          git diff --cached --quiet || git commit -m 'â›µ auto-export: locations.json + public export aktualisiert'
          git push
